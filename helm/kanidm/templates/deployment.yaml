apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kanidm.fullname" . }}
  labels:
    {{- include "kanidm.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "kanidm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "kanidm.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kanidm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: "config"
              mountPath: "/data"
            - name: "data"
              mountPath: "/db"                 
            - name: "certs"
              mountPath: "/ssl"                    
          ports:
            - name: http
              containerPort: 8443
              protocol: TCP
      #initContainers:
      #  - name: initdb
      #    image: "kanidm/server:latest"
      #    command: ['/sbin/kanidmd', 'recover_account', '-c', '/data/server.toml', '-n', 'admin']
      #    volumeMounts:
      #    - name: config
      #      mountPath: "/data"
          #livenessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          #readinessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ .Release.Name }}-config
        - name: certs
          secret:
            secretName: {{ .Release.Name }}-certs
        - name: data
          emptyDir: {}                      
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
